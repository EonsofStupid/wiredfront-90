import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Github } from "lucide-react";
export function RepositoryStep({ projectDetails, repoDetails, setRepoDetails }) {
    if (projectDetails.isImporting) {
        return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center space-x-2 text-xl font-semibold", children: [_jsx(Github, { className: "h-6 w-6" }), _jsx("h3", { children: "Import from GitHub" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "repo-url", children: "Repository URL" }), _jsx(Input, { id: "repo-url", value: repoDetails.repoUrl, onChange: (e) => setRepoDetails({ ...repoDetails, repoUrl: e.target.value }), placeholder: "https://github.com/username/repository" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Enter the URL of the GitHub repository you want to import." })] })] }));
    }
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center space-x-2 text-xl font-semibold", children: [_jsx(Github, { className: "h-6 w-6" }), _jsx("h3", { children: "Create GitHub Repository" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "repo-name", children: "Repository Name" }), _jsx(Input, { id: "repo-name", value: repoDetails.repoName, onChange: (e) => setRepoDetails({ ...repoDetails, repoName: e.target.value }), placeholder: projectDetails.name.toLowerCase().replace(/\s+/g, '-') }), _jsx("p", { className: "text-sm text-muted-foreground", children: "This will be the name of your GitHub repository." })] }), _jsxs("div", { className: "flex items-center justify-between space-x-2 pt-2", children: [_jsx(Label, { htmlFor: "repo-private", className: "cursor-pointer", children: "Make repository private" }), _jsx(Switch, { id: "repo-private", checked: repoDetails.isPrivate, onCheckedChange: (checked) => setRepoDetails({ ...repoDetails, isPrivate: checked }) })] }), _jsx("div", { className: "text-sm text-muted-foreground", children: repoDetails.isPrivate ? (_jsx("p", { children: "Private repositories are only visible to you and people you share them with." })) : (_jsx("p", { children: "Public repositories are visible to anyone on the internet." })) })] }));
}
