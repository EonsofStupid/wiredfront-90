import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Github, AlertCircle, ExternalLink } from "lucide-react";
export function GitHubStatusSection({ isConnected, username, isCheckingConnection, connectionStatus, onConnect, onDisconnect }) {
    return (_jsxs("div", { className: "p-4 border-b border-neon-blue/20", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Github, { className: "h-5 w-5 text-neon-blue" }), _jsx("h3", { className: "font-medium", children: "GitHub Status" })] }), isConnected ? (_jsx(Badge, { className: "bg-green-500 hover:bg-green-600", children: "Connected" })) : (_jsx(Badge, { className: "bg-amber-500 hover:bg-amber-600", children: "Not Connected" }))] }), isConnected && username && (_jsxs("div", { className: "mt-2 text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Connected as: " }), _jsxs("a", { href: `https://github.com/${username}`, target: "_blank", rel: "noopener noreferrer", className: "font-medium text-[#8B5CF6] hover:text-[#7E69AB] transition-colors inline-flex items-center", children: ["@", username, _jsx(ExternalLink, { className: "h-3 w-3 ml-1" })] })] })), !isConnected && (_jsxs("div", { className: "mt-2", children: [_jsx(Button, { variant: "outline", size: "sm", className: "w-full text-neon-blue border-neon-blue hover:bg-neon-blue/10", onClick: onConnect, disabled: isCheckingConnection || connectionStatus === 'connecting', children: connectionStatus === 'connecting' ? (_jsxs(_Fragment, { children: [_jsx("div", { className: "h-4 w-4 mr-2 animate-spin rounded-full border-2 border-current border-t-transparent" }), "Connecting..."] })) : (_jsxs(_Fragment, { children: [_jsx(Github, { className: "h-4 w-4 mr-2" }), "Connect to GitHub"] })) }), connectionStatus === 'error' && (_jsxs("div", { className: "mt-2 text-xs text-red-500 flex items-center gap-1", children: [_jsx(AlertCircle, { className: "h-3 w-3" }), _jsx("span", { children: "Connection failed. Check Settings." })] }))] }))] }));
}
