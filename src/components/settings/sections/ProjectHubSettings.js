import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Github, Save, Database } from "lucide-react";
import { useGitHubConnection } from "@/hooks/github/useGitHubConnection";
import { useProjects } from "@/hooks/projects/useProjects";
export function ProjectHubSettings() {
    const { isConnected, githubUsername } = useGitHubConnection();
    const { projects, activeProject } = useProjects();
    return (_jsx("div", { className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Project Hub Settings" }), _jsx(CardDescription, { children: "Configure your Project Hub experience and default project settings" })] }), _jsx(CardContent, { className: "space-y-6", children: _jsxs(Tabs, { defaultValue: "interface", children: [_jsxs(TabsList, { children: [_jsx(TabsTrigger, { value: "interface", children: "Interface" }), _jsx(TabsTrigger, { value: "defaults", children: "Defaults" }), _jsx(TabsTrigger, { value: "integration", children: "Integrations" })] }), _jsx(TabsContent, { value: "interface", className: "space-y-4 pt-4", children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between space-x-2", children: [_jsxs(Label, { htmlFor: "auto-expand", className: "flex flex-col space-y-1", children: [_jsx("span", { children: "Auto-expand Project Hub" }), _jsx("span", { className: "font-normal text-sm text-muted-foreground", children: "Automatically expand Project Hub when viewing a project" })] }), _jsx(Switch, { id: "auto-expand" })] }), _jsxs("div", { className: "flex items-center justify-between space-x-2", children: [_jsxs(Label, { htmlFor: "dark-theme", className: "flex flex-col space-y-1", children: [_jsx("span", { children: "Use custom theme" }), _jsx("span", { className: "font-normal text-sm text-muted-foreground", children: "Apply a custom theme to the Project Hub" })] }), _jsx(Switch, { id: "dark-theme" })] }), _jsxs("div", { className: "flex items-center justify-between space-x-2", children: [_jsxs(Label, { htmlFor: "auto-save", className: "flex flex-col space-y-1", children: [_jsx("span", { children: "Auto-save projects" }), _jsx("span", { className: "font-normal text-sm text-muted-foreground", children: "Automatically save project changes" })] }), _jsx(Switch, { id: "auto-save", defaultChecked: true })] })] }) }), _jsx(TabsContent, { value: "defaults", className: "space-y-4 pt-4", children: _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "default-project", children: "Default Project" }), _jsxs(Select, { defaultValue: activeProject?.id, children: [_jsx(SelectTrigger, { id: "default-project", children: _jsx(SelectValue, { placeholder: "Select default project" }) }), _jsx(SelectContent, { children: projects?.map(project => (_jsx(SelectItem, { value: project.id, children: project.name }, project.id))) })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "default-sync", children: "Default Sync Frequency" }), _jsxs(Select, { defaultValue: "manual", children: [_jsx(SelectTrigger, { id: "default-sync", children: _jsx(SelectValue, { placeholder: "Select sync frequency" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "realtime", children: "Realtime" }), _jsx(SelectItem, { value: "hourly", children: "Hourly" }), _jsx(SelectItem, { value: "daily", children: "Daily" }), _jsx(SelectItem, { value: "manual", children: "Manual" })] })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "default-notification", children: "Default Notifications" }), _jsxs(Select, { defaultValue: "important", children: [_jsx(SelectTrigger, { id: "default-notification", children: _jsx(SelectValue, { placeholder: "Select notification level" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Activities" }), _jsx(SelectItem, { value: "important", children: "Important Only" }), _jsx(SelectItem, { value: "minimal", children: "Minimal" }), _jsx(SelectItem, { value: "none", children: "None" })] })] })] })] }) }), _jsxs(TabsContent, { value: "integration", className: "space-y-4 pt-4", children: [_jsxs(Card, { className: "border-muted bg-muted/20", children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs(CardTitle, { className: "text-base flex items-center gap-2", children: [_jsx(Github, { className: "h-4 w-4" }), " GitHub Integration"] }), _jsx(Badge, { children: isConnected ? "Connected" : "Disconnected" })] }), _jsx(CardDescription, { children: isConnected
                                                            ? `Connected as @${githubUsername}`
                                                            : "Connect your GitHub account to enable repository features" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between space-x-2", children: [_jsxs(Label, { htmlFor: "auto-sync", className: "flex flex-col space-y-1", children: [_jsx("span", { children: "Auto-sync repositories" }), _jsx("span", { className: "font-normal text-sm text-muted-foreground", children: "Automatically sync changes with GitHub" })] }), _jsx(Switch, { id: "auto-sync", disabled: !isConnected })] }), _jsxs("div", { className: "flex items-center justify-between space-x-2", children: [_jsxs(Label, { htmlFor: "commit-preview", className: "flex flex-col space-y-1", children: [_jsx("span", { children: "Show commit previews" }), _jsx("span", { className: "font-normal text-sm text-muted-foreground", children: "Preview changes before committing" })] }), _jsx(Switch, { id: "commit-preview", disabled: !isConnected, defaultChecked: true })] })] }) })] }), _jsxs(Card, { className: "border-muted bg-muted/20", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx("div", { className: "flex items-center", children: _jsxs(CardTitle, { className: "text-base flex items-center gap-2", children: [_jsx(Database, { className: "h-4 w-4" }), " Database Integration"] }) }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: _jsxs("div", { className: "flex items-center justify-between space-x-2", children: [_jsxs(Label, { htmlFor: "auto-index", className: "flex flex-col space-y-1", children: [_jsx("span", { children: "Auto-index projects" }), _jsx("span", { className: "font-normal text-sm text-muted-foreground", children: "Automatically index project files for search" })] }), _jsx(Switch, { id: "auto-index", defaultChecked: true })] }) }) })] })] })] }) }), _jsxs(CardFooter, { className: "border-t pt-6 flex justify-between", children: [_jsx(Button, { variant: "outline", children: "Reset to Defaults" }), _jsxs(Button, { children: [_jsx(Save, { className: "h-4 w-4 mr-2" }), "Save Changes"] })] })] }) }));
}
// Define Badge component here since it wasn't imported
const Badge = ({ children, className }) => (_jsx("span", { className: `bg-blue-500/10 text-blue-500 text-xs px-2 py-0.5 rounded-full font-medium ${className}`, children: children }));
