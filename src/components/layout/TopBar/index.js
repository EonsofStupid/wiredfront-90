import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { cn } from "@/lib/utils";
import { Bell, Search, PanelLeftClose, PanelLeft, PanelRightClose, PanelRight, Settings } from "lucide-react";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Button } from "@/components/ui/button";
import { useNavigate } from "react-router-dom";
import { UserMenu } from "@/components/user/UserMenu";
import { useUIStore } from "@/stores";
export const TopBar = ({ className, isCompact, onToggleCompact }) => {
    const navigate = useNavigate();
    const { layout, toggleRightSidebar } = useUIStore();
    const isRightSidebarVisible = layout.rightSidebarVisible;
    return (_jsx("header", { className: cn("h-16 border-b border-neon-blue/20 glass-card px-6 relative", className), children: _jsxs("div", { className: "h-full flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-4", children: [_jsx("h1", { className: "gradient-text text-2xl font-bold", children: "wiredFRONT" }), _jsx("button", { onClick: onToggleCompact, className: "animate-hover-button p-2 rounded-lg text-neon-pink hover:text-neon-blue transition-colors", "aria-label": isCompact ? "Expand sidebar" : "Collapse sidebar", children: isCompact ? _jsx(PanelLeft, { className: "w-5 h-5" }) : _jsx(PanelLeftClose, { className: "w-5 h-5" }) })] }), _jsx(TooltipProvider, { delayDuration: 0, children: _jsxs("div", { className: "flex items-center gap-4", children: [_jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { variant: "ghost", size: "icon", onClick: toggleRightSidebar, className: "animate-hover-button text-neon-pink hover:text-neon-blue", "aria-label": isRightSidebarVisible ? "Hide project sidebar" : "Show project sidebar", children: isRightSidebarVisible ? _jsx(PanelRightClose, { className: "w-5 h-5" }) : _jsx(PanelRight, { className: "w-5 h-5" }) }) }), _jsx(TooltipContent, { children: isRightSidebarVisible ? "Hide projects" : "Show projects" })] }), _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { variant: "ghost", size: "icon", onClick: () => navigate('/search'), className: "animate-hover-button text-neon-pink hover:text-neon-blue", children: _jsx(Search, { className: "w-5 h-5" }) }) }), _jsx(TooltipContent, { children: "Search" })] }), _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { variant: "ghost", size: "icon", onClick: () => navigate('/notifications'), className: "animate-hover-button text-neon-pink hover:text-neon-blue", children: _jsx(Bell, { className: "w-5 h-5" }) }) }), _jsx(TooltipContent, { children: "Notifications" })] }), _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { variant: "ghost", size: "icon", onClick: () => navigate('/settings'), className: "animate-hover-button text-neon-pink hover:text-neon-blue", children: _jsx(Settings, { className: "w-5 h-5" }) }) }), _jsx(TooltipContent, { children: "Settings" })] }), _jsx("div", { className: "relative", style: { zIndex: 'var(--z-user-menu)' }, children: _jsx(UserMenu, {}) })] }) })] }) }));
};
