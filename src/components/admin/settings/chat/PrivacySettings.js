import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { Button } from "@/components/ui/button";
import { Trash2 } from "lucide-react";
export const PrivacySettings = ({ settings, handleSettingChange, handleClearHistory }) => {
    return (_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Privacy Settings" }), _jsx(CardDescription, { children: "Manage your data and privacy preferences" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "saveHistory", children: "Save Chat History" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Store your conversations for future reference" })] }), _jsx(Switch, { id: "saveHistory", checked: settings.saveHistory, onCheckedChange: (checked) => handleSettingChange('privacy', 'saveHistory', checked) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "anonymizeData", children: "Anonymize Data" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Remove personal identifiers from stored conversations" })] }), _jsx(Switch, { id: "anonymizeData", checked: settings.anonymizeData, onCheckedChange: (checked) => handleSettingChange('privacy', 'anonymizeData', checked) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("div", { className: "flex justify-between", children: _jsxs(Label, { htmlFor: "dataRetentionDays", children: ["Data Retention (days): ", settings.dataRetentionDays] }) }), _jsx(Slider, { id: "dataRetentionDays", min: 7, max: 365, step: 1, value: [settings.dataRetentionDays], onValueChange: ([value]) => handleSettingChange('privacy', 'dataRetentionDays', value) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "allowAnalytics", children: "Allow Analytics" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Help us improve by sharing anonymous usage data" })] }), _jsx(Switch, { id: "allowAnalytics", checked: settings.allowAnalytics, onCheckedChange: (checked) => handleSettingChange('privacy', 'allowAnalytics', checked) })] }), _jsxs("div", { className: "pt-4", children: [_jsxs(Button, { variant: "destructive", onClick: handleClearHistory, className: "w-full", children: [_jsx(Trash2, { className: "h-4 w-4 mr-2" }), "Clear All Chat History"] }), _jsx("p", { className: "text-xs text-muted-foreground mt-2 text-center", children: "This action cannot be undone" })] })] })] }));
};
