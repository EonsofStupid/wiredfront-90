import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { Badge } from "@/components/ui/badge";
import { AlertTriangle } from "lucide-react";
export const AdvancedSettings = ({ settings, handleSettingChange }) => {
    return (_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Advanced Settings" }), _jsx(CardDescription, { children: "Configure technical aspects of the chat system" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "debugMode", children: "Debug Mode" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Show technical information for troubleshooting" })] }), _jsx(Switch, { id: "debugMode", checked: settings.debugMode, onCheckedChange: (checked) => handleSettingChange('advanced', 'debugMode', checked) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsxs(Label, { htmlFor: "experimentalFeatures", children: ["Experimental Features", _jsxs(Badge, { className: "ml-2 bg-yellow-500/20 text-yellow-500 hover:bg-yellow-500/30 border-yellow-500/30", children: [_jsx(AlertTriangle, { className: "h-3 w-3 mr-1" }), "Beta"] })] }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Enable features still in development" })] }), _jsx(Switch, { id: "experimentalFeatures", checked: settings.experimentalFeatures, onCheckedChange: (checked) => handleSettingChange('advanced', 'experimentalFeatures', checked) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("div", { className: "flex justify-between", children: _jsxs(Label, { htmlFor: "apiTimeout", children: ["API Timeout (seconds): ", settings.apiTimeout] }) }), _jsx(Slider, { id: "apiTimeout", min: 10, max: 300, step: 5, value: [settings.apiTimeout], onValueChange: ([value]) => handleSettingChange('advanced', 'apiTimeout', value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("div", { className: "flex justify-between", children: _jsxs(Label, { htmlFor: "retryAttempts", children: ["Retry Attempts: ", settings.retryAttempts] }) }), _jsx(Slider, { id: "retryAttempts", min: 0, max: 5, step: 1, value: [settings.retryAttempts], onValueChange: ([value]) => handleSettingChange('advanced', 'retryAttempts', value) })] })] })] }));
};
