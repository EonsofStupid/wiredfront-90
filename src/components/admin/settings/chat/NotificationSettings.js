import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
export const NotificationSettings = ({ settings, handleSettingChange }) => {
    return (_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Notification Settings" }), _jsx(CardDescription, { children: "Configure how you receive alerts and notifications" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "soundEnabled", children: "Sound Effects" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Play sounds for new messages and events" })] }), _jsx(Switch, { id: "soundEnabled", checked: settings.soundEnabled, onCheckedChange: (checked) => handleSettingChange('notifications', 'soundEnabled', checked) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "desktopNotifications", children: "Desktop Notifications" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Show browser notifications when you receive messages" })] }), _jsx(Switch, { id: "desktopNotifications", checked: settings.desktopNotifications, onCheckedChange: (checked) => handleSettingChange('notifications', 'desktopNotifications', checked) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "mentionAlerts", children: "Mention Alerts" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Get notified when you are mentioned in a message" })] }), _jsx(Switch, { id: "mentionAlerts", checked: settings.mentionAlerts, onCheckedChange: (checked) => handleSettingChange('notifications', 'mentionAlerts', checked) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "emailDigest", children: "Email Digest" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Receive a summary of activity by email" })] }), _jsx(Switch, { id: "emailDigest", checked: settings.emailDigest, onCheckedChange: (checked) => handleSettingChange('notifications', 'emailDigest', checked) })] })] })] }));
};
