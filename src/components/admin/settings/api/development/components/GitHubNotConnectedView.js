import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { AlertCircle, Check, Info, Loader2 } from "lucide-react";
export function GitHubNotConnectedView({ newGithubToken, setNewGithubToken, isValidating, validateGithubToken }) {
    return (_jsxs("div", { className: "space-y-4", children: [_jsx("div", { className: "flex items-center p-4 rounded-lg bg-muted/50", children: _jsxs("div", { className: "flex-1", children: [_jsxs("h4", { className: "font-medium flex items-center gap-2", children: [_jsx(AlertCircle, { className: "h-4 w-4 text-amber-500" }), "GitHub Not Connected"] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Add a GitHub token to enable repository access" })] }) }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Input, { type: "password", placeholder: "Enter your GitHub personal access token", value: newGithubToken, onChange: (e) => setNewGithubToken(e.target.value) }), _jsxs(Button, { onClick: () => validateGithubToken(newGithubToken), disabled: isValidating || !newGithubToken, variant: "outline", children: [isValidating ? (_jsx(Loader2, { className: "h-4 w-4 animate-spin mr-2" })) : (_jsx(Check, { className: "h-4 w-4 mr-2" })), "Validate"] })] }), _jsxs("p", { className: "text-xs flex items-center text-muted-foreground", children: [_jsx(Info, { className: "h-3 w-3 mr-1" }), "Token needs 'repo' scope for full repository access"] })] })] }));
}
