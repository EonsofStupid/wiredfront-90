import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { DialogFooter } from "@/components/ui/dialog";
import { RefreshCw, User, Key } from "lucide-react";
export function GitHubTokenForm({ tokenName, token, isLoading, validationState, onTokenNameChange, onTokenChange, onSubmit, onClose }) {
    return (_jsxs("form", { onSubmit: onSubmit, className: "space-y-4 py-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "token-name", children: "Token Name" }), _jsxs("div", { className: "relative", children: [_jsx(Input, { id: "token-name", placeholder: "e.g., GitHub Work Account", value: tokenName, onChange: (e) => onTokenNameChange(e.target.value), className: "pr-10", disabled: isLoading }), _jsx(User, { className: "h-4 w-4 absolute right-3 top-3 text-muted-foreground" })] }), _jsx("p", { className: "text-xs text-muted-foreground", children: "A memorable name to identify this token" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "github-token", children: "GitHub Personal Access Token" }), _jsxs("div", { className: "relative", children: [_jsx(Input, { id: "github-token", type: "password", placeholder: "ghp_...", value: token, onChange: (e) => onTokenChange(e.target.value), className: "pr-10", disabled: isLoading || validationState === "valid" }), _jsx(Key, { className: "h-4 w-4 absolute right-3 top-3 text-muted-foreground" })] }), _jsxs("p", { className: "text-xs text-muted-foreground", children: ["Create a token with 'repo' scope from", " ", _jsx("a", { href: "https://github.com/settings/tokens", target: "_blank", rel: "noopener noreferrer", className: "text-[#8B5CF6] hover:underline", children: "GitHub Settings" })] })] }), _jsxs(DialogFooter, { className: "pt-4", children: [_jsx(Button, { type: "button", variant: "outline", onClick: onClose, disabled: isLoading, children: "Cancel" }), _jsx(Button, { type: "submit", disabled: isLoading || !token || !tokenName, className: "admin-primary-button", children: isLoading ? (_jsxs(_Fragment, { children: [_jsx(RefreshCw, { className: "h-4 w-4 mr-2 animate-spin" }), validationState === "validating" ? "Validating..." : "Saving..."] })) : ("Add Token") })] })] }));
}
