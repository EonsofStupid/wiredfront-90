import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Info, Shield, Key } from "lucide-react";
import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from "@/components/ui/tooltip";
export function KeyDetailsStep({ selectedProvider, onProviderChange, keyName, onKeyNameChange, keyValue, onKeyValueChange }) {
    return (_jsxs("div", { className: "space-y-5", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "apiProvider", className: "flex items-center", children: [_jsx(Shield, { className: "h-4 w-4 mr-2 text-indigo-400" }), "API Provider"] }), _jsxs(Select, { value: selectedProvider, onValueChange: onProviderChange, children: [_jsx(SelectTrigger, { id: "apiProvider", className: "bg-slate-900/50 border-gray-700", children: _jsx(SelectValue, { placeholder: "Select provider" }) }), _jsxs(SelectContent, { className: "bg-slate-900 border-gray-700", children: [_jsx(SelectItem, { value: "openai", className: "hover:bg-slate-800", children: "OpenAI" }), _jsx(SelectItem, { value: "anthropic", className: "hover:bg-slate-800", children: "Anthropic" }), _jsx(SelectItem, { value: "gemini", className: "hover:bg-slate-800", children: "Google Gemini" }), _jsx(SelectItem, { value: "pinecone", className: "hover:bg-slate-800", children: "Pinecone" }), _jsx(SelectItem, { value: "github", className: "hover:bg-slate-800", children: "GitHub" })] })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "memorableName", className: "flex items-center", children: [_jsx(Key, { className: "h-4 w-4 mr-2 text-indigo-400" }), "Memorable Name"] }), _jsx(Input, { id: "memorableName", value: keyName, onChange: (e) => onKeyNameChange(e.target.value), placeholder: "e.g., production_main_key", className: "bg-slate-900/50 border-gray-700" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Give this key a memorable name for easy reference" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs(Label, { htmlFor: "apiKey", className: "flex items-center", children: [_jsx(Shield, { className: "h-4 w-4 mr-2 text-indigo-400" }), "API Key"] }), _jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx("div", { className: "rounded-full bg-slate-800 p-1 cursor-help", children: _jsx(Info, { className: "h-4 w-4 text-gray-400" }) }) }), _jsx(TooltipContent, { children: _jsxs("p", { children: ["Your API key is securely encrypted and stored.", _jsx("br", {}), "It will never be displayed in plain text after saving."] }) })] }) })] }), _jsx(Input, { id: "apiKey", type: "password", value: keyValue, onChange: (e) => onKeyValueChange(e.target.value), className: "bg-slate-900/50 border-gray-700 font-mono", placeholder: selectedProvider === 'openai' ? 'sk-...' :
                            selectedProvider === 'anthropic' ? 'sk-ant-...' :
                                selectedProvider === 'gemini' ? 'AIza...' :
                                    selectedProvider === 'pinecone' ? 'PINE-...' :
                                        selectedProvider === 'github' ? 'ghp_...' :
                                            'Enter your API key' }), _jsxs("p", { className: "text-xs text-muted-foreground flex items-center", children: [_jsx(Shield, { className: "h-3 w-3 mr-1 text-green-500" }), "This key will be encrypted and stored securely"] })] })] }));
}
