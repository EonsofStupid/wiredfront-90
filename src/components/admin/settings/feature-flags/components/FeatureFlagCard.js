import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardHeader, CardContent, CardFooter, CardTitle, CardDescription } from '@/components/ui/card';
import { Switch } from '@/components/ui/switch';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
export function FeatureFlagCard({ flag, onToggle, onEdit }) {
    return (_jsxs(Card, { className: "overflow-hidden hover:shadow-md transition-shadow", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs("div", { className: "flex justify-between items-start", children: [_jsxs("div", { className: "space-y-1", children: [_jsx(CardTitle, { className: "text-xl", children: flag.name }), _jsx(CardDescription, { className: "font-mono text-xs", children: flag.key })] }), _jsx(Switch, { checked: flag.enabled, onCheckedChange: () => onToggle(flag) })] }) }), _jsxs(CardContent, { className: "pb-2", children: [flag.description ? (_jsx("p", { className: "text-sm text-muted-foreground line-clamp-3", children: flag.description })) : (_jsx("p", { className: "text-sm text-muted-foreground italic", children: "No description" })), flag.target_roles && flag.target_roles.length > 0 && (_jsxs("div", { className: "mt-3", children: [_jsx("p", { className: "text-xs text-muted-foreground mb-1", children: "Target roles:" }), _jsx("div", { className: "flex flex-wrap gap-1", children: flag.target_roles.map(role => (_jsx(Badge, { variant: "outline", className: "text-xs", children: role.replace('_', ' ') }, role))) })] })), flag.rollout_percentage < 100 && (_jsxs("div", { className: "mt-3", children: [_jsxs("p", { className: "text-xs text-muted-foreground", children: ["Rollout: ", flag.rollout_percentage, "%"] }), _jsx("div", { className: "w-full bg-secondary h-1.5 rounded-full mt-1 overflow-hidden", children: _jsx("div", { className: "bg-primary h-full rounded-full", style: { width: `${flag.rollout_percentage}%` } }) })] }))] }), _jsx(CardFooter, { className: "pt-2", children: _jsx(Button, { variant: "ghost", size: "sm", onClick: () => onEdit(flag), children: "Edit" }) })] }, flag.id));
}
